---

- name: Install dotfiles symlinks
  file: src={{ playbook_dir }}/{{ item }} dest=~/{{ item }} state=link force=true
  with_items:
    - .ackrc
    - .ignore
    - .atom
    - .backup.exclude.list
    - .bash_functions
    - .bash_profile
    - .bashrc
    - .ctags
    - .dir_colors
    # - .docker
    - .fonts
    - .git_template
    - .gitattributes
    - .gitconfig
    - .ycm_extra_conf.py
    - .gnupg
    - .hgrc
    - .ideavimrc
    - .isort.cfg
    - .jshintrc
    - .jupyter
    - .less
    - .netrc
    - .pdbrc
    - .pdbrc.py
    - .psqlrc
    - .pylama.ini
    - .pylintrc
    - .pythonrc
    - .screenrc
    - .spacemacs
    - .termcap
    - .terminfo
    - .tmux.conf
    - .vim
    - .vimrc
  tags:
    - links

- stat: path={{ playbook_dir }}/.bashrc.local
  register: bashrclocal
  tags:
    - links

- name: Install optional local profile
  file: src={{ playbook_dir }}/.bashrc.local dest=~/.bashrc.local state=link force=true
  when: bashrclocal.stat.exists
  tags:
    - links

- stat: path={{ playbook_dir }}/.gitconfig.local
  register: gitconfiglocal
  tags:
    - links

- name: Install optional local gitconfig
  file: src={{ playbook_dir }}/.gitconfig.local dest=~/.gitconfig.local state=link force=true
  when: gitconfiglocal.stat.exists
  tags:
    - links

- stat: path={{ playbook_dir }}/.tmuxp
  register: tmuxp
  tags:
    - links

- name: Check tmuxp dir
  file: src={{ playbook_dir }}/.tmuxp dest=~/.tmuxp state=link force=true
  when: tmuxp.stat.exists and tmuxp.stat.isdir
  tags:
    - links

- name: Install gitignore symlink
  file: src={{ playbook_dir }}/gitignore dest=~/.gitignore state=link force=true
  tags:
    - links

- name: get root HOME
  shell: echo $HOME
  when: SKIP_SUDO is not defined
  become: yes
  register: root_home
  tags:
    - links

- name: Install dotfiles symlinks to root
  file: src={{ playbook_dir }}/{{ item }} dest={{ root_home.stdout }}/{{ item }} state=link force=true
  when: SKIP_SUDO is not defined
  become: yes
  with_items:
    - .termcap
    - .terminfo
  tags:
    - links
    - root-links

- name: Create required directories
  file: path={{ item }} state=directory
  with_items:
    - ~/go
    # for go build
    - ~/tmp
    - ~/envs
    - ~/.config
  tags:
    - links

- name: Install extra symlinks
  file: src={{ playbook_dir }}/{{ item.path }} dest=~/{{ item.dest }} state=link force=true
  with_items:
    - { path: 'bin', dest: 'bin' }
    - { path: 'envs/postactivate', dest: 'envs/postactivate' }
    - { path: 'envs/postmkvirtualenv', dest: 'envs/postmkvirtualenv' }
    - { path: 'config/pudb', dest: '.config/pudb' }
    - { path: 'config/ghostty', dest: '.config/ghostty' }
    - { path: '.vim', dest: '.config/nvim' }
  tags:
    - links

- stat: path=/usr/bin/fc-cache
  register: fc_cache_present
  tags:
    - update_font_cache

- name: Install fonts
  command: fc-cache
  become: yes
  when: fc_cache_present.stat.exists
  tags:
    - update_font_cache

# - name: Install pyenv
#   git: repo='https://github.com/yyuu/pyenv.git' dest='{{ lookup('ENV', 'HOME') }}/.pyenv'
#   tags:
#     - pyenv

# - name: Install pyenv-virtualenv
#   git: repo='https://github.com/yyuu/pyenv-virtualenv.git' dest='{{ lookup('ENV', 'HOME') }}/.pyenv/plugins/pyenv-virtualenv'
#   tags:
#     - pyenv-virtualenv

- name: Install pipx python packages
  command: >
    pipx install --include-deps
    pipenv
    tmuxp
    mypy
    pylint
    pylama
    isort
    pdbpp
    ipython
    black
  tags:
    - pippackages

- name: Install global python liraries
  command: >
    pip install --user --no-cache-dir --break-system-packages
    neovim
  tags:
    - pippackages

- name: Install rustup
  ansible.builtin.shell:
    cmd: /usr/bin/curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable --no-modify-path
    creates: "{{ lookup('ENV', 'HOME') }}/.cargo/bin/cargo"
  tags:
    - rust

# - name: Install go tools
#   command: go get {{ item }}
#   environment:
#     GOPATH: "{{ lookup('ENV', 'HOME') }}/go"
#   when: SKIP_SUDO is not defined
#   with_items:
#     # - github.com/junkblocker/codesearch/...
#     - github.com/vladimir-g/gmtrn/cmd/gmtrn-cli

#   tags:
#     - gotools

# - name: install node packages
#   npm: name={{ item }} global=yes
#   become: yes
#   when: SKIP_SUDO is not defined
#   with_items:
#     - jshint
#   tags:
#     - install_node_packages
