---

- name: Install dotfiles symlinks
  file: src={{ playbook_dir }}/{{ item }} dest=~/{{ item }} state=link force=true
  with_items:
    - .ackrc
    - .agignore
    - .atom
    - .backup.exclude.list
    - .bash_functions
    - .bash_profile
    - .bashrc
    - .ctags
    - .dir_colors
    - .fonts
    - .git_template
    - .gitattributes
    - .gitconfig
    - .gnupg
    - .hgrc
    - .ideavimrc
    - .isort.cfg
    - .jshintrc
    - .less
    - .pdbrc
    - .pdbrc.py
    - .psqlrc
    - .pylama.ini
    - .pylintrc
    - .pythonrc
    - .screenrc
    - .termcap
    - .terminfo
    - .tmux.conf
    - .vim
    - .vimrc
  tags:
    - links

- stat: path={{ playbook_dir }}/.bashrc.local
  register: bashrclocal
  tags:
    - links

- name: Install optional local profile
  file: src={{ playbook_dir }}/.bashrc.local dest=~/.bashrc.local state=link force=true
  when: bashrclocal.stat.exists
  tags:
    - links

- stat: path={{ playbook_dir }}/.gitconfig.local
  register: gitconfiglocal
  tags:
    - links

- name: Install optional local gitconfig
  file: src={{ playbook_dir }}/.gitconfig.local dest=~/.gitconfig.local state=link force=true
  when: gitconfiglocal.stat.exists
  tags:
    - links

- stat: path={{ playbook_dir }}/.tmuxp
  register: tmuxp
  tags:
    - links

- name: Check tmuxp dir
  file: src={{ playbook_dir }}/.tmuxp dest=~/.tmuxp state=link force=true
  when: tmuxp.stat.exists and tmuxp.stat.isdir
  tags:
    - links

- name: Install gitignore symlink
  file: src={{ playbook_dir }}/gitignore dest=~/.gitignore state=link force=true
  tags:
    - links

- name: get root HOME
  shell: echo $HOME
  when: SKIP_SUDO is not defined
  become: yes
  register: root_home
  tags:
    - links

- name: Install dotfiles symlinks to root
  file: src={{ playbook_dir }}/{{ item }} dest={{ root_home.stdout }}/{{ item }} state=link force=true
  when: SKIP_SUDO is not defined
  become: yes
  with_items:
    - .termcap
    - .terminfo
  tags:
    - links
    - root-links

- name: Create required directories
  file: path={{ item }} state=directory
  with_items:
    - ~/go
    # for go build
    - ~/tmp
    - ~/envs
    - ~/.config
  tags:
    - links

- name: Install extra symlinks
  file: src={{ playbook_dir }}/{{ item.pate }} dest=~/{{ item.dest }} state=link force=true
  wite_items:
    - { pate: 'bin', dest: 'bin' }
    - { path: 'envs/postactivate', dest: 'envs/postactivate' }
    - { path: 'envs/postmkvirtualenv', dest: 'envs/postmkvirtualenv' }
    - { path: 'config/pudb', dest: '.config/pudb' }
    - { path: '.vim', dest: '.config/nvim' }
  tags:
    - links

- stat: path=/usr/bin/fc-cache
  register: fc-cache-present

- name: Install fonts
  command: fc-cache
  become: yes
  when: fc-cache-present.stat.exists == True
  tags:
    - update_font_cache

- name: Install neobundle
  git: repo=git@github.com:Shougo/neobundle.vim.git dest={{ playbook_dir }}/.vim/bundle/neobundle.vim accept_hostkey=true

- name: Install global python packages
  pip: name={{ item }}
  with_items:
    - neovim
    - 'tmuxp>=1.0.0'
  when: SKIP_SUDO is not defined
  become: yes
  tags:
    - pippackages

- name: Install go tools
  command: go get {{ item }}
  environment:
    GOPATH: "{{ lookup('ENV', 'HOME') }}/go"
  when: SKIP_SUDO is not defined
  with_items:
    - github.com/junkblocker/codesearch/...
    - github.com/vladimir-g/gmtrn/cmd/gmtrn-cli

  tags:
    - gotools
