---
- name: Install system deps
  sudo: yes
  zypper: name={{ item }} state=present
  with_items:
    - git-core
    - ctags
    - cmake
    - gcc-c++
    - python-devel
    - go
    - the_silver_searcher
    - tmux
    - bash-completion
    - python-virtualenvwrapper
    - chromium
    - xinput
    - python-pip

- name: Install extra fonts
  sudo: yes
  file: src={{ playbook_dir }}/fonts/Singularity.ttf dest=/usr/share/fonts/truetype/Singularity.ttf state=link force=true

- name: Update font database
  sudo: yes
  command: /usr/sbin/fonts-config

- name: Create required directories
  file: path={{ item }} state=directory
  with_items:
    - ~/.kde4/share/apps/konsole
    - ~/.kde4/share/config

- name: Install Autostart symlinks
  file: src={{ playbook_dir }}/kde4/Autostart/{{ item }} dest=~/.kde4/Autostart/{{ item }} state=link force=true
  with_items:
    - ssh-add.sh
    - usb-trackpoint.sh

- name: Install udev rules
  sudo: yes
  file: src={{ playbook_dir }}/udev/90-local.rules dest=/etc/udev/rules.d/90-local.rules state=link force=true

- name: Configure KDE4 apps
  file: src={{ playbook_dir }}/kde4/share/apps/{{ item }} dest=~/.kde4/share/apps/{{ item }} state=link force=true
  with_items:
    - konsole/Shell.profile
    - konsole/konsoleui.rc

- name: Configure KDE4
  file: src={{ playbook_dir }}/kde4/share/config/{{ item }} dest=~/.kde4/share/config/{{ item }} state=link force=true
  with_items:
    - kdeglobals
    - kscreensaverrc
    - kwinrc
    - khotkeysrc
    - kglobalshortcutsrc

- name: Install tmuxp
  sudo: yes
  command: pip2.7 install tmuxp

- name: Configure snapper
  sudo: yes
  command: snapper  -c root create-config /
  register: snapper_result
  failed_when: "snapper_result.rc and 'covered' not in snapper_result.stderr"
  tags:
    - snapper

- name: Configure snapper
  sudo: yes
  command: snapper  -c home create-config /home
  register: snapper_result
  failed_when: "snapper_result.rc and 'covered' not in snapper_result.stderr"
  tags:
    - snapper

- name: Configure snapper
  file: src={{ playbook_dir }}/snapper/{{ item }} dest=/etc/snapper/configs/{{ item }} state=link force=true
  sudo: yes
  with_items:
    - root
    - home

- name: Get suse version
  shell: cat /etc/os-release |grep VERSION_ID | cut -d\" -f 2
  register: SUSE_VERSION
  tags:
    - zypper

- name: Configure repositories
  command: zypper --gpg-auto-import-keys ar -f -n packman-essentials http://packman.inode.at/suse/openSUSE_{{ SUSE_VERSION.stdout }}/Essentials/ packman-essentials
  sudo: yes
  register: packman_result
  failed_when: "packman_result.rc and 'exists' not in packman_result.stderr"
  tags:
    - zypper
